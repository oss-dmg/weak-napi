sudo: false

# First we set up the the type of project, in this case node_js
language: node_js

env:
  global:
    - CXX=g++-4.9
    - NVS_VERSION=1.5.2
  
  # We also need to specify the node.js versions we want to build from
  # and we want to also create binaries for the different node versions.
  matrix:
    # - NODEJS_VERSION=node/4 <- EoL (End of Life)
    - NODEJS_VERSION=node/6
    - NODEJS_VERSION=node/8
    - NODEJS_VERSION=node/9
    # - NODEJS_VERSION=node/10 <- (Currently an issue)
    # - NODEJS_VERSION=node/11 <- (Currently an issue)
    # - NODEJS_VERSION=node/12 <- (Still in development)

matrix:
  fast_finish: true

cache:
  directories:
    - node_modules
    - $HOME/.npm
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.9

before_install:
  # Install command `tree`
  - sudo apt-get install -y tree
  # Install NVS.
  - git clone --branch v$NVS_VERSION --depth 1 https://github.com/jasongin/nvs ~/.nvs
  - . ~/.nvs/nvs.sh
  - nvs --version
  # Get commit message to check if we should publish binary
  - COMMIT_MESSAGE=$(git show -s --format=%B $TRAVIS_COMMIT | tr -d '\n')
  # Put local npm modules .bin on PATH
  - export PATH=./node_modules/.bin/:$PATH
  # node.js
  - nvs add $NODEJS_VERSION
  - nvs use $NODEJS_VERSION
  # Install node-gyp and node-pre-gyp so it is available for packaging and publishing
  - npm install node-gyp -g
  - npm install node-pre-gyp
  - npm install node-pre-gyp-github
  # Figure out if we should publish
  - PUBLISH_BINARY=false
  # Short print-outs
  - echo $PUBLISH_BINARY
  - echo $TRAVIS_BRANCH
  # If we are building a tag then we need to publish a new binary package
  - if [[ $TRAVIS_BRANCH == `git describe --tags --always HEAD` ]]; then PUBLISH_BINARY=true; fi;
  # or if we put the string [publish binary] in the commit message
  - if test "${COMMIT_MESSAGE#*'[publish binary]'}" != "$COMMIT_MESSAGE"; then PUBLISH_BINARY=true; fi;
  
# Install scripts. (runs after repo cloning)
install:
  - npm install -g npm@latest
  # Ensure source install works and compiles correctly
  - npm install --build-from-source
  - tree -I node_modules
  # Run tests
  - npm test

before_script:
  - echo "Publishing native platform Binary Package? ->" $PUBLISH_BINARY
  # if we are publishing for this commit, do it
  - if [[ $PUBLISH_BINARY == true ]]; then node-pre-gyp package && node-pre-gyp-github publish --release; fi;
  # cleanup
  - node-pre-gyp clean
  - node-gyp clean

# Post-install test scripts.
script:
  # Output useful info for debugging
  - node --version
  - npm --version
  
after_success:
  # if success then query and display all published binaries
  - node-pre-gyp info
  # OpenCover
  - npm install coveralls
  # - nyc report --reporter=text-lcov | ./node_modules/.bin/coveralls